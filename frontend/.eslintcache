[{"/Users/sahil/Portfolio/resume-scanner/frontend/src/index.js":"1","/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Dropzone/Dropzone.jsx":"2","/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Landing.jsx":"3","/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Nav/Nav.jsx":"4","/Users/sahil/Portfolio/resume-scanner/frontend/src/Footer/Footer.jsx":"5"},{"size":2043,"mtime":1609580342477,"results":"6","hashOfConfig":"7"},{"size":2254,"mtime":1609581045284,"results":"8","hashOfConfig":"7"},{"size":1299,"mtime":1609569067071,"results":"9","hashOfConfig":"7"},{"size":640,"mtime":1609409765924,"results":"10","hashOfConfig":"7"},{"size":827,"mtime":1609411498907,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1su3y35",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"/Users/sahil/Portfolio/resume-scanner/frontend/src/index.js",["26","27","28","29"],"import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\";\n\n//component imports\nimport Landing from \"./Landing/Landing\";\nimport Footer from \"./Footer/Footer\";\n\nfunction App() {\n  const [appState, updateAppState] = useState(\"landing\");\n  const [filename, updateFilename] = useState(\"\");\n  const [pageData, updatePageData] = useState({});\n  useEffect(() => {\n    if (appState === \"submitted\") {\n      console.log(filename);\n      const endpoint = \"http://localhost:5000/getResumeDetails?filename=\" + filename;\n      fetch(endpoint)\n        .then(response => response.json())\n        .then(data => {\n          updatePageData(data)\n          updateAppState(\"results\")\n        });\n      updateAppState(\"loading\");\n    }\n  }, [appState]);\n  let pageContent;\n  if (appState == \"landing\") {\n    pageContent = (\n      <>\n        <Landing\n          updateAppState={updateAppState}\n          updateFilename={updateFilename} />\n        <Footer />\n      </>\n    );\n  } else if (appState === \"loading\") {\n    pageContent = <LoadingScreen />\n  } else if (appState === \"results\") {\n    pageContent = <>{JSON.stringify(pageData)}</>;\n  } else {\n    pageContent = <>.</>;\n  }\n  return (\n    <>\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" />\n      <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;900&display=swap\" rel=\"stylesheet\" />\n      <BackgroundWave />\n      <div className=\"page-content\">\n        {pageContent}\n      </div>\n\n    </>\n  )\n}\n\nfunction BackgroundWave() {\n  return (\n    <div className=\"background-wave-container\">\n      <img src=\"./img/wave-vector.svg\" className=\"background-wave\" />\n    </div>\n  )\n}\n\nfunction LoadingScreen() {\n  return (\n    <div className=\"loading-screen-container\">\n      <img src=\"./img/loading.gif\" className=\"loading-gif\" />\n      <p className=\"loading-screen-text\">Finding you a FAANG offer...</p>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["30","31"],"/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Dropzone/Dropzone.jsx",["32","33","34"],"import 'react-dropzone-uploader/dist/styles.css'\nimport Dropzone, { getFilesFromEvent } from 'react-dropzone-uploader';\nimport \"./dropzone.css\";\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector'\n\nexport default function FileDropzone({ updateAppState, updateFilename }) {\n  // specify upload params and url for your files\n  const simlateProd = false;\n  const endpoint = (simlateProd ? \"\" : \"http://localhost:5000\") + \"/postResume\"\n  const getUploadParams = ({ meta }) => { return { url: endpoint } }\n\n  // called every time a file's `status` changes\n  const handleChangeStatus = ({ meta, file }, status) => {\n    console.log(status, meta, file);\n    if (status === \"done\") {\n      updateFilename(file.name);\n    }\n  }\n\n  // receives array of files that are done uploading when submit button is clicked\n  const handleSubmit = (files, allFiles) => {\n    console.log(files.map(f => f.meta));\n    allFiles.forEach(f => f.remove());\n    updateAppState(\"submitted\");\n  }\n\n  const getFilesFromEvent = e => {\n    return new Promise(resolve => {\n      getDroppedOrSelectedFiles(e).then(chosenFiles => {\n        resolve(chosenFiles.map(f => f.fileObject))\n      })\n    })\n  }\n\n  return (\n    <Dropzone\n      getUploadParams={getUploadParams}\n      onChangeStatus={handleChangeStatus}\n      onSubmit={handleSubmit}\n      accept=\".pdf,.doc,.docx\"\n      maxFiles={1}\n      InputComponent={Input}\n      getFilesFromEvent={getFilesFromEvent}\n    />\n  )\n}\n\nconst Input = ({ accept, onFiles, files, getFilesFromEvent }) => {\n  const text = files.length > 0 ? 'Add more files' : 'Choose files'\n\n  return (\n    <div className=\"dropzone-input\">\n      <label style={{ cursor: 'pointer' }}>\n        <img src=\"./img/resume-upload-img.png\" className=\"dropzone-img\" />\n        <p className=\"dropzone-input-text\">\n          Drag & drop your resume here, or\n          <span style={{ color: \"#0076F1\" }}><strong> browse</strong></span>\n          .\n        </p>\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple\n          onChange={e => {\n            getFilesFromEvent(e).then(chosenFiles => {\n              onFiles(chosenFiles)\n            })\n          }}\n        />\n      </label>\n    </div >\n  )\n}","/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Landing.jsx",["35"],"import React from \"react\";\nimport \"./landing.css\";\n\nimport Nav from \"./Nav/Nav\";\nimport FileDropzone from \"./Dropzone/Dropzone\";\nimport Footer from \"../Footer/Footer\";\n\nexport default function Landing({ updateAppState, updateFilename }) {\n  return (\n    <>\n      <Nav />\n      <LandingText />\n      <div className=\"landing-dropzone-wrapper\">\n        {FileDropzone({ updateAppState, updateFilename })}\n      </div>\n      <div className=\"landing-value-props-wrapper\">\n        <ValueProps />\n      </div>\n    </>\n  );\n}\n\nfunction LandingText() {\n  return (\n    <div className=\"landing-text-container\">\n      <h1 className=\"landing-text-title\">Resume Feedback in One Click</h1>\n      <p className=\"landing-subtext\">\n        You spent weeks refining your resume, but still can’t land an interview. Omni helps you refine and catch mistakes using pro algos. Now you’ll land an interview at your dream company.\n      </p>\n    </div>\n  );\n}\n\nfunction ValueProps() {\n  return (\n    <div className=\"landing-value-props-container\">\n      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</p>\n    </div>\n  )\n}","/Users/sahil/Portfolio/resume-scanner/frontend/src/Landing/Nav/Nav.jsx",[],"/Users/sahil/Portfolio/resume-scanner/frontend/src/Footer/Footer.jsx",[],{"ruleId":"36","severity":1,"message":"37","line":25,"column":6,"nodeType":"38","endLine":25,"endColumn":16,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":27,"column":16,"nodeType":"42","messageId":"43","endLine":27,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":59,"column":7,"nodeType":"46","endLine":59,"endColumn":70},{"ruleId":"44","severity":1,"message":"45","line":67,"column":7,"nodeType":"46","endLine":67,"endColumn":62},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":20,"nodeType":"53","messageId":"54","endLine":2,"endColumn":37},{"ruleId":"51","severity":1,"message":"55","line":49,"column":9,"nodeType":"53","messageId":"54","endLine":49,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":54,"column":9,"nodeType":"46","endLine":54,"endColumn":75},{"ruleId":"51","severity":1,"message":"56","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filename'. Either include it or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'getFilesFromEvent' is defined but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","'Footer' is defined but never used.",{"desc":"60","fix":"61"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [appState, filename]",{"range":"62","text":"63"},[769,779],"[appState, filename]"]